# Car Selector Backend - basic Nginx configuration.

upstream upstream_app {
    # Upstream app to FastAPI instance.

    # Set resolver for this upstream to ECS valid for only 10 seconds.
    # Enable if using Amazong ECS alongside Azure DevOps, avoids 502 bad
    # gateway on rebuild/restart.
    #resolver 169.254.169.253 valid=10s;

    # Replaced with environment variables by Nginx init script.
    server $UPSTREAM_SERVER:$UPSTREAM_PORT;
}

server {
    # Default server block, only handles 80.
    listen 80;
    listen [::]:80;

    # Replaced with environment variable defined in compose config, we can
    # use this to better automate certs later on.
    server_name www.$DOMAIN $DOMAIN;

    # Set access log location.
    access_log $ACCESS_LOG;
    
    location /import/vehicles/logos/ {
        # Internal only block, will direct approved requests for vehicle logos
        # toward the content directory.
        internal;
        include "/etc/nginx/mime.types";
        root $CONTENT_DIRECTORY;
    }

    location ~* /logo/(.+) {
        # Requests for a logo will be passed to the API, where we will retrieve the
        # logo's relative URI given the input (which is a make UID.)
        include "/etc/nginx/snippets/proxy-params.conf";
        proxy_pass http://upstream_app/api/logo/$1;
    }

    location /api/ {
        # All requests for API, pass this to upstream application.
        # Include proxy params, then use proxy pass to upstream.
        include "/etc/nginx/snippets/proxy-params.conf";
        proxy_pass http://upstream_app$request_uri;
    }

    location / {
        # All other requests we'll alias to default /var/www/html which is where
        # the frontend's build directory will be mapped.
        alias /var/www/html/;
    }
}